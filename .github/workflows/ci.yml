name: React CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build React App
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies
      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install

      # Build the project
      - name: Build Project
        working-directory: ./frontend
        run: |
          CI=false npm run build

      # Debug: Check build output
      - name: Verify Build Directory
        run: ls -la ./frontend/build

  deploy:
    name: Deploy React App to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the code again (required for the deploy step)
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup SSH for secure file transfer
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Debug: Check SSH Agent
      - name: Debug SSH Agent
        run: ssh-add -l

      # Test SSH Connection
      - name: Test SSH Connection
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} "echo 'Connection successful!'"

      # Deploy the React app to EC2
      - name: Deploy React App
        run: |
          # Stop the app and clean the deployment directory
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          pm2 stop react-app || true
          rm -rf /var/www/react-app/*
          mkdir -p /var/www/react-app
          exit
          EOF

          # Copy the build files to the EC2 instance
          scp -o StrictHostKeyChecking=no -r ./frontend/build/* ubuntu@${{ secrets.EC2_IP }}:/var/www/react-app/

          # Verify the copied files on EC2
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} "ls -la /var/www/react-app"

          # Start the app using PM2
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          cd /var/www/react-app
          pm2 start serve --name react-app -- -s . -l 3000
          pm2 save
          exit
          EOF
